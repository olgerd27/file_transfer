# Build the RPC files for both server & client
# Pass the MODE=DBG argument if you need a debug mode compilation.

# Default target - must be at the top of makefile that allows to execute 'all' automatically
.PHONY: all clean debug
all: TITLE_BEG OBJ_BUILD TITLE_END

# Construct the object dir
ifeq ($(MODE),DBG)
  OPT_MODE := -g -Wall
  D_MODE := debug
else
  OPT_MODE :=
  D_MODE := release
endif
D_OBJ := ../../obj/$(D_MODE)/$(notdir $(CURDIR))

# Dependency compiler options
OPT_DEPS := -MMD -MP

# Initial RPC source files
SRC_RPC := fltr.x

# RPC C-lang source files
HDR_RPC := $(subst .x,.h,$(SRC_RPC))
SRCS := $(subst .x,_xdr.c,$(SRC_RPC)) \
		$(subst .x,_svc.c,$(SRC_RPC)) \
		$(subst .x,_clnt.c,$(SRC_RPC))

# RPC object files
OBJS := $(addprefix $(D_OBJ)/,$(subst .c,.o,$(SRCS)))

# Including the TI-RPC header files as the system ones allows 
# to not include them to the dependencies files
INCL:=-isystem /usr/include/tirpc

# Commands
CC := gcc
CMD_CREATE_DIR = mkdir -p $(dir $@)

MSG_COMP = echo "Compiling $(notdir $<) -> $(notdir $@):"
CMD_COMP = $(CC) $(OPT_MODE) $(OPT_DEPS) $(INCL) -c $< -o $@

# Include automatically generated dependencies
-include $(OBJS:.o=.d)

DLM := "---------------"

### Execution
OBJ_BUILD: $(OBJS)

TITLE_BEG:
	@echo "$(DLM) RPCGEN build $(DLM)"

TITLE_END:
	@echo "$(DLM) RPCGEN build completed"

$(D_OBJ)/%.o: %.c
	@$(CMD_CREATE_DIR)
	@$(MSG_COMP)
	$(CMD_COMP)

$(HDR_RPC) $(SRCS): $(SRC_RPC)
	@echo "Executing rpcgen for $(notdir $<) -> $(notdir $(HDR_RPC) $(SRCS)):"
	rpcgen $<

clean:
	@echo "$(DLM) RPCGEN clean $(DLM)"
	@rm -fv $(OBJS) $(OBJS:.o=.d) $(SRCS) $(HDR_RPC) 

# Debug rule to print all variables
debug:
	@echo "$(DLM) RPCGEN debug info $(DLM)"
	@echo "SRCS: $(SRCS)"
	@echo "OBJS: $(OBJS)"